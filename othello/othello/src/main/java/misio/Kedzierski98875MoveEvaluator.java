package misio;

import put.ci.cevo.games.board.Board;
import put.ci.cevo.games.othello.OthelloBoard;
import put.ci.cevo.games.player.BoardMoveEvaluator;

import com.google.common.base.Preconditions;

public class Kedzierski98875MoveEvaluator implements BoardMoveEvaluator<OthelloBoard> {
	private double[] values =
		{ 0.080288522154368, -0.006306542277155333, 0.024514442482004455, -0.00741814361241641, -0.004332186511696593, 0.023017831657447398, -0.0036611695734873996, 0.07460775019634293, -0.008433130688151564, -0.002047733874600093, -0.0037597512789482794, 0.00116112682699431, 3.1671941285349843E-4, -0.004423717690553774, -0.007997737590676577, -0.008924352799043092, 0.01835354413695196, -0.00568288938688675, 0.0026816696645115073, 0.0036029009393243245, -0.0013589368919612885, 0.005154349817117927, -0.009298734820080916, 0.023034769831707096, -0.005454077355285469, 6.204120210793033E-4, 0.009202922393483135, -1.72049209057785E-4, 0.0018490673568241432, 0.005707615817565991, 6.445197905247378E-4, -0.008912574081994576, -0.008977633204675232, 0.0024346342726540384, 0.0055191551790213025, -0.0032392136908027743, -0.004866205847538127, 0.004445049695147477, 0.0015396902570854812, -0.006254141038858353, 0.03479344457480521, -0.006259220768602653, 0.007458012708221637, 0.003704535572782034, -0.0018153085411903981, 0.0029110694028736082, -0.011773410464786792, 0.023289115643814785, -0.0030867201064966325, -0.006569941836996732, -0.0016974903601937154, 2.52373173922776E-4, 8.833867245527957E-4, -0.002065758545555366, -0.004264759351779886, -0.00592907568100436, 0.0883712162605393, -0.005600711018467497, 0.0280248750062625, -0.0036121575866123906, -0.004485941729632409, 0.021227344443124872, -0.011865035636572364, 0.056379914276935304};
	/**
	 * @param move
	 *            is a value rc, where (1 <= r,c <= 8), e.g. 23 means row=2,
	 *            col=3
	 * @player is a player I'm playing with
	 * @board is an Othello board with Board.WHITE, Board.BLACK or Board.EMPTY
	 *        pieces
	 */
	@Override
	public double evaluateMove(OthelloBoard board, int move, int player) {
		Preconditions.checkArgument(11 <= move && move <= 88);
		Preconditions.checkArgument(player == Board.WHITE
				|| player == Board.BLACK);
		OthelloBoard copy = board.clone();
		copy.makeMove(move, player);
		return eval(copy);
	}

	private double eval(OthelloBoard board) {
		double val = 0;
		for (int i = 0; i < 8; i++)
			for (int j = 0; j < 8; j++) {
				double field = board.getValue(i, j) - 1;
				double mult = values[i * 8 + j];
				double part = field * mult;
				val += part;
			}
		return val;
	}
}
